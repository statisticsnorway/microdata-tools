name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python -
        poetry install

    - name: Run tests
      id: test
      run: poetry run pytest

  publish:
    name: Publish
    runs-on: ubuntu-latest
    environment: PyPI 
    needs: test
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        curl -sSL https://install.python-poetry.org | python -
        poetry install

    - name: Build and publish
      run: poetry publish --build --username ${{ secrets.PYPI_USER }} --password ${{ secrets.PYPI_TOKEN }}

  github-release:
    name: Release pushed tag
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: read
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"   

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python -
          poetry install

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "sha=$(git rev-parse --verify --quiet HEAD^)" >> $GITHUB_OUTPUT

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "poetry version | cut -f 2 -d' '"

      - name: Build package
        run: |
          poetry build

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6.0.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}