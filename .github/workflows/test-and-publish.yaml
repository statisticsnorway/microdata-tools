name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
    
    - name: Sync dependencies
      run: uv sync

    - name: Run tests
      run: uv run pytest

  publish:
    name: Publish
    runs-on: ubuntu-latest
    environment: PyPI 
    needs: test
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6
    
    - name: Sync dependencies
      run: uv sync

    - name: Build
      run: uv build

    - name: Publish
      env: 
        USER: ${{ secrets.PYPI_USER }}
        TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: uv publish --username "$USER" --password "$TOKEN"

  github-release:
    name: Release pushed tag
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: read
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"   

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
    
      - name: Sync dependencies
        run: uv sync

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "sha=$(git rev-parse --verify --quiet HEAD^)" >> $GITHUB_OUTPUT

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@b1778166f13188a9d478e2d1198f993011ba9864 #v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "uv version --short"

      - name: Build package
        run: |
          uv build

      - name: Publish the release notes
        uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5 #v6.1.0
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}